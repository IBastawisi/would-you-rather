{"version":3,"sources":["services/users.ts","services/helpers.ts","services/login.ts","services/questions.ts","slices/app.ts","slices/questions.ts","slices/users.ts","slices/index.ts","components/RegisterForm.tsx","components/LoginForm.tsx","utils/helpers.ts","404.svg","components/NotFound.tsx","components/Question.tsx","components/Dashboard.tsx","components/Leaderboard.tsx","components/Navbar.tsx","components/NewQuestion.tsx","components/Announcer.tsx","logo.svg","components/Splash.tsx","components/App.tsx","store.ts","serviceWorker.ts","index.tsx"],"names":["baseUrl","getAll","a","axios","get","response","data","register","user","post","_token","getAuthToken","getAuthedUser","authedUserJSON","window","localStorage","getItem","JSON","parse","setAuthedUser","token","setItem","stringify","login","create","newObject","config","headers","Authorization","update","id","put","remove","delete","loadAsync","createAsyncThunk","_","thunkAPI","dispatch","showLoading","Promise","all","userService","questionService","hideLoading","authedUser","users","questions","loginAsync","loginService","rejectWithValue","registerAsync","appSlice","createSlice","name","initialState","loading","announcement","reducers","state","action","payload","setLoading","announce","clearAnnouncement","extraReducers","builder","addCase","pending","fulfilled","questionsSlice","load","addAnswer","question","answer","username","votes","push","removeAnswer","filter","add","reduce","memo","answerQuestionAsync","info","actions","updatedQuestion","addQuestionAsync","newQuestion","usersSlice","author","answers","app","reducer","loadingBar","loadingBarReducer","RegisterForm","useState","password","setUser","useDispatch","history","useHistory","handleInput","event","target","value","handleSubmit","preventDefault","error","message","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","Icon","Typography","variant","onSubmit","noValidate","mt","TextField","size","margin","required","fullWidth","label","autoComplete","autoFocus","onChange","type","Button","mb","LoginForm","to","formatDate","timestamp","d","Date","time","toLocaleTimeString","substr","slice","toLocaleDateString","NotFound","location","useLocation","style","textAlign","src","notFound","width","alt","pathname","VoteDetails","text","totalVotes","active","p","cursor","startIcon","fontSize","flex","position","CircularProgress","top","left","bottom","right","justifyContent","color","Math","round","Question","params","useParams","useSelector","questionAuthor","userAnswer","optionOne","includes","optionTwo","handleAnswer","e","currentTarget","className","Card","CardHeader","avatar","avatarURL","title","subheader","CardContent","Collapse","in","timeout","unmountOnExit","length","CardActions","height","onClick","Dashboard","questionIds","Object","keys","sort","b","unansweredIds","answeredIds","setValue","useEffect","TabContext","borderBottom","borderColor","TabList","centered","newValue","Tab","TabPanel","map","align","Leaderboard","sorted","CardMedia","image","flexGrow","pb","borderRadius","backgroundColor","Navbar","Fragment","Toolbar","NavLink","noWrap","px","removeItem","Paper","zIndex","elevation","BottomNavigation","showLabels","BottomNavigationAction","icon","NewQuestion","setNewQuestion","disabled","Announcer","Snackbar","open","autoHideDuration","onClose","Splash","logo","App","path","exact","store","configureStore","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c7e1fcd0.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'https://would-you-rather-server.herokuapp.com/api/users'\n\nconst getAll = async ()  => {\n  const response = await axios.get<user[]>(baseUrl)\n  return response.data\n}\n\n\nconst register = async (user: userRegisterRequest) => {\n  const response = await axios.post<user>(baseUrl, user)\n  return response.data\n}\n\nexport { getAll, register }","let _token: string | null = null\n\nexport const getAuthToken = () => _token;\n\nexport const setAuthToken = (token: string | undefined) => {\n  _token = token ? `bearer ${token}` : null\n}\n\nexport const getAuthedUser = () => {\n  const authedUserJSON = window.localStorage.getItem('authedUser')\n  const authedUser: authedUser | null = authedUserJSON && JSON.parse(authedUserJSON);\n  return authedUser\n}\n\nexport const setAuthedUser = (user: authedUser) => {\n  _token = `bearer ${user.token}`\n  window.localStorage.setItem(\n    'authedUser', JSON.stringify(user)\n  )\n}\n\nexport const clearAuthedUser = () => {\n  _token = null\n  window.localStorage.removeItem('authedUser')\n}\n","import axios from 'axios'\nimport { setAuthedUser } from './helpers'\nconst baseUrl = 'https://would-you-rather-server.herokuapp.com/api/login'\n\nconst login = async (user: userLoginRequest) => {\n  const response = await axios.post<authedUser>(baseUrl, user)\n  setAuthedUser(response.data)\n  return response.data\n}\n\nexport { login }","import axios from 'axios'\nimport { getAuthToken } from './helpers';\n\nconst baseUrl = 'https://would-you-rather-server.herokuapp.com/api/questions'\n\nconst getAll = async () => {\n  const response = await axios.get<question[]>(baseUrl)\n  return response.data\n}\n\nconst create = async (newObject: { optionOne: string, optionTwo: string }) => {\n  const token = getAuthToken();\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post<question>(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id: string, newObject: question) => {\n  const token = getAuthToken();\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.put<question>(`${baseUrl}/${id}`, newObject, config)\n  return response.data\n}\n\nconst remove = async (id: string) => {\n  const token = getAuthToken();\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport { getAll, create, update, remove }","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { hideLoading, showLoading } from 'react-redux-loading-bar';\nimport { getAuthedUser, loginService, questionService, setAuthToken, userService } from '../services';\n\nexport interface AppState {\n  authedUser: authedUser | null;\n  loading: boolean;\n  announcement: string | null\n}\n\nconst initialState: AppState = {\n  authedUser: null,\n  loading: true,\n  announcement: null,\n};\n\nexport const loadAsync = createAsyncThunk('app/load', async (_, thunkAPI) => {\n  thunkAPI.dispatch(showLoading())\n  const response = await Promise.all([userService.getAll(), questionService.getAll()]);\n  thunkAPI.dispatch(hideLoading())\n  const authedUser = getAuthedUser();\n  setAuthToken(authedUser?.token);\n\n  return { users: response[0], questions: response[1], authedUser };\n});\n\nexport const loginAsync = createAsyncThunk('app/login', async (user: { username: string, password: string }, thunkAPI) => {\n  thunkAPI.dispatch(showLoading())\n  try {\n    const response = await loginService.login(user)\n    return response\n  } catch (err: any) {\n    if (!err.response) {\n      throw err\n    }\n    return thunkAPI.rejectWithValue(err.response.data)\n  } finally {\n    thunkAPI.dispatch(hideLoading())\n  }});\n\nexport const registerAsync = createAsyncThunk('app/register', async (user: { username: string, password: string, name: string }, thunkAPI) => {\n  thunkAPI.dispatch(showLoading())\n  try {\n    const response = await userService.register(user)\n    return response\n  } catch (err: any) {\n    if (!err.response) {\n      throw err\n    }\n    return thunkAPI.rejectWithValue(err.response.data)\n  } finally {\n    thunkAPI.dispatch(hideLoading())\n  }\n});\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    setAuthedUser: (state, action: PayloadAction<authedUser | null>) => {\n      state.authedUser = action.payload\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload\n    },\n    announce: (state, action) => {\n      state.announcement = action.payload\n    },\n    clearAnnouncement: (state) => {\n      state.announcement = null\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loadAsync.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(loadAsync.fulfilled, (state, action) => {\n        state.authedUser = action.payload.authedUser;\n        state.loading = false;\n      })\n      .addCase(loginAsync.fulfilled, (state, action) => {\n        state.authedUser = action.payload;\n        state.announcement = `Welcome back, ${action.payload.name}`;\n      })\n      .addCase(registerAsync.fulfilled, (state, action) => {\n        state.announcement = 'Account created! please login to continue';\n      });\n  },\n});\n\nexport default appSlice.reducer;","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { showLoading, hideLoading } from 'react-redux-loading-bar';\nimport { questionService } from '../services';\nimport { update } from '../services/questions';\nimport { loadAsync } from './app';\n\nconst initialState: { [key: string]: question } = {};\n\nexport const questionsSlice = createSlice({\n  name: 'questions',\n  initialState,\n  reducers: {\n    load: (state, action: PayloadAction<{ [key: string]: question }>) => action.payload,\n    addAnswer: (state, action: PayloadAction<{ question: question, answer: answer, username: string }>) => {\n      const { question, answer, username } = action.payload;\n      state[question.id][answer].votes.push(username);\n    },\n    removeAnswer: (state, action: PayloadAction<{ question: question, answer: answer, username: string }>) => {\n      const { question, answer, username } = action.payload;\n      let votes = state[question.id][answer].votes;\n      state[question.id][answer].votes = votes.filter(id => id !== username);\n    },\n    add: (state, action: PayloadAction<question>) => {\n      state[action.payload.id] = action.payload;\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loadAsync.fulfilled, (state, action) => ({\n        ...action.payload.questions.reduce(\n          (memo, question) => ({ ...memo, [question.id]: question }),\n          {}\n        ),\n        ...state\n      }))\n  },\n});\n\nexport const answerQuestionAsync = createAsyncThunk('questions/answer', async (info: { question: question, answer: answer, username: string }, thunkAPI) => {\n  thunkAPI.dispatch(showLoading())\n  thunkAPI.dispatch(questionsSlice.actions.addAnswer(info))\n\n  const updatedQuestion: question = {\n    ...info.question,\n    [info.answer]: {\n      ...info.question[info.answer],\n      votes: [...info.question[info.answer].votes, info.username]\n    }\n  }\n  const response = await update(info.question.id ,updatedQuestion);\n  \n  !response && thunkAPI.dispatch(questionsSlice.actions.removeAnswer(info))\n\n  thunkAPI.dispatch(hideLoading())\n  \n  return info;\n});\n\nexport const addQuestionAsync = createAsyncThunk('questions/add', async (newQuestion: { optionOne: string, optionTwo: string }, thunkAPI) => {\n  thunkAPI.dispatch(showLoading())\n  const response = await questionService.create(newQuestion);\n  thunkAPI.dispatch(questionsSlice.actions.add(response))\n  thunkAPI.dispatch(hideLoading())\n  return response;\n});\n\nexport default questionsSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { loadAsync, registerAsync } from './app';\nimport { addQuestionAsync, answerQuestionAsync } from './questions';\n\nconst initialState: { [key: string]: user } = {};\n\nexport const usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    load: (state, action: PayloadAction<{ [key: string]: user }>) => action.payload,\n    add: (state, action: PayloadAction<user>) => { state[action.payload.username] = action.payload }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loadAsync.fulfilled, (state, action) => ({\n        ...action.payload.users.reduce(\n          (memo, user) => ({ ...memo, [user.username]: user }),\n          {}\n        ),\n        ...state\n      }))\n      .addCase(addQuestionAsync.fulfilled, (state, action) => {\n        state[action.payload.author].questions.push(action.payload.id)\n      })\n      .addCase(answerQuestionAsync.fulfilled, (state, action) => {\n        state[action.payload.username].answers[action.payload.question.id] = action.payload.answer\n      })\n      .addCase(registerAsync.fulfilled, (state, action) => {\n        state[action.payload.username] = action.payload\n      });\n  },\n\n});\n\n\nexport default usersSlice.reducer;\n","import { loadingBarReducer } from \"react-redux-loading-bar\";\nimport { appSlice, loadAsync, loginAsync, registerAsync } from \"./app\";\nimport { questionsSlice, addQuestionAsync, answerQuestionAsync } from \"./questions\";\nimport { usersSlice } from \"./users\";\nimport { showLoading, hideLoading } from 'react-redux-loading-bar'\n\nexport const actions = {\n  app: {\n    ...appSlice.actions,\n    loadAsync,\n    loginAsync,\n    registerAsync,\n    showLoading,\n    hideLoading,\n  },\n  users: usersSlice.actions,\n  questions: { ...questionsSlice.actions, addQuestionAsync, answerQuestionAsync },\n\n};\n\nexport const reducers = {\n  app: appSlice.reducer,\n  users: usersSlice.reducer,\n  questions: questionsSlice.reducer,\n  loadingBar: loadingBarReducer,\n}\n\nexport default reducers;\n","import React, { useState } from 'react'\nimport { actions } from '../slices'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport Container from '@mui/material/Container'\nimport Box from '@mui/material/Box'\nimport Avatar from '@mui/material/Avatar'\nimport Icon from '@mui/material/Icon'\nimport Typography from '@mui/material/Typography'\nimport TextField from '@mui/material/TextField'\nimport Button from '@mui/material/Button'\n\n\nconst RegisterForm = () => {\n  const [user, setUser] = useState({ username: '', name: '', password: '' })\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setUser({ ...user, [name]: value })\n  }\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault()\n    const response: any = await dispatch(actions.app.registerAsync(user))\n    if (response.error) {\n      dispatch(actions.app.announce(response.payload?.error || response.error.message))\n    } else {\n      setUser({ username: '', name: '', password: '' })\n      history.push('/login')\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <Icon>how_to_reg</Icon>\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n          <TextField\n            size=\"small\"\n            margin=\"dense\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={handleInput}\n          />\n          <TextField\n            size=\"small\"\n            margin=\"dense\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Name\"\n            name=\"name\"\n            autoComplete=\"name\"\n            onChange={handleInput}\n          />\n          <TextField\n            size=\"small\"\n            margin=\"dense\"\n            fullWidth\n            id=\"avatarURL\"\n            label=\"Avatar URL\"\n            name=\"avatarURL\"\n            autoComplete=\"avatarURL\"\n            onChange={handleInput}\n          />\n          <TextField\n            size=\"small\"\n            margin=\"dense\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleInput}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Register\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n    // <div className=\"form-container\">\n    //   <h2>Register</h2>\n    //   <form onSubmit={handleSubmit}>\n    //     <input type=\"text\"\n    //       name='username'\n    //       value={user.username}\n    //       onChange={handleInput}\n    //       placeholder=\"Username\" />\n    //     <input type=\"text\"\n    //       name='name'\n    //       value={user.name}\n    //       onChange={handleInput}\n    //       placeholder=\"Name\" />\n    //     <input\n    //       name=\"password\"\n    //       type=\"password\"\n    //       value={user.password}\n    //       onChange={handleInput}\n    //       placeholder=\"Password\" />\n\n    //     <button type=\"submit\" style={{ margin: 16 }}>Register</button>\n    //   </form>\n    // </div>\n  )\n}\n\nexport default RegisterForm","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../slices'\nimport { Link, useHistory } from 'react-router-dom'\nimport Container from '@mui/material/Container'\nimport Box from '@mui/material/Box'\nimport Avatar from '@mui/material/Avatar'\nimport Icon from '@mui/material/Icon'\nimport Typography from '@mui/material/Typography'\nimport TextField from '@mui/material/TextField'\nimport Button from '@mui/material/Button'\n\nconst LoginForm = () => {\n  const [user, setUser] = useState({ username: '', password: '' })\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setUser({ ...user, [name]: value })\n  }\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault()\n    const response: any = await dispatch(actions.app.loginAsync(user))\n    if (response.error) {\n      dispatch(actions.app.announce(response.payload?.error || response.error.message))\n    } else {\n      setUser({ username: '', password: '' })\n      history.push('/')\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <Icon>how_to_reg</Icon>\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n          <TextField\n            size=\"small\"\n            margin=\"dense\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={handleInput}\n          />\n          <TextField\n            size=\"small\"\n            margin=\"dense\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleInput}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n          <Link to=\"/register\">{\"Don't have an account? Sign Up\"}</Link>\n        </Box>\n      </Box>\n    </Container>\n  )\n}\n\nexport default LoginForm","export function formatDate (timestamp: number) {\n  const d = new Date(timestamp)\n  const time = d.toLocaleTimeString('en-US')\n  return time.substr(0, 5) + time.slice(-2) + ' | ' + d.toLocaleDateString()\n}","export default __webpack_public_path__ + \"static/media/404.f7f74b0b.svg\";","import React from \"react\";\nimport { useLocation } from \"react-router\";\nimport notFound from \"../404.svg\";\n\nconst NotFound: React.FC = () => {\n  let location = useLocation();\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"2rem\" }}>\n      <img src={notFound} width={256} alt=\"Resource Not Found\" />\n      <h3>No match for <code>{location.pathname}</code></h3>\n    </div>\n  );\n}\n\nexport default NotFound","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { actions } from '../slices';\nimport { AppDispatch, RootState } from '../store';\nimport { formatDate } from '../utils/helpers';\nimport Icon from '@mui/material/Icon';\nimport Avatar from '@mui/material/Avatar';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport Collapse from '@mui/material/Collapse';\nimport Typography from '@mui/material/Typography';\nimport CardActions from '@mui/material/CardActions';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport NotFound from './NotFound';\n\nconst Question: React.FC<{ id: string }> = ({ id }) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const history = useHistory()\n  const params = useParams<{ id: string }>();\n  if (params.id) id = params.id;\n\n  const authedUser = useSelector((state: RootState) => state.app.authedUser)\n  const question = useSelector((state: RootState) => state.questions[id])\n  const questionAuthor = useSelector((state: RootState) => state.users[question?.author])\n\n  if (!question) {\n    return <NotFound />\n  }\n  let userAnswer: answer | null = null;\n  if (authedUser) {\n    userAnswer = question.optionOne.votes.includes(authedUser.username) ? \"optionOne\" :\n      question.optionTwo.votes.includes(authedUser.username) ? \"optionTwo\" : null;\n  }\n\n  const handleAnswer = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    if (authedUser) {\n      const answer = e.currentTarget.value as answer;\n      await dispatch(actions.questions.answerQuestionAsync({ question, answer, username: authedUser.username }))\n      history.push(`/questions/${id}`)\n    } else {\n      dispatch(actions.app.announce(\"Please login to vote!\"))\n      history.push('/login')\n    }\n  }\n\n  return (\n    <Link className='question' to={`/questions/${id}`} style={{cursor: params.id? \"auto\": \"pointer\"}}>\n      <Card sx={{ m: 2 }} variant=\"outlined\">\n        <CardHeader\n          avatar={\n            <Avatar\n              src={questionAuthor.avatarURL}\n              alt={`Avatar of ${questionAuthor.name}`}\n            >\n            </Avatar>\n          }\n          title={questionAuthor.name}\n          subheader={formatDate(question.timestamp)}\n        />\n        <CardContent>\n          <Typography variant=\"h5\" textAlign=\"center\">Would You Rather</Typography>\n        </CardContent>\n        <Collapse in={userAnswer !== null} timeout=\"auto\" unmountOnExit>\n          {userAnswer && <CardContent>\n            <Box sx={{ display: \"flex\", justifyContent: \"space-around\" }}>\n              <VoteDetails text={question.optionOne.text} votes={question.optionOne.votes.length} totalVotes={question.optionOne.votes.length + question.optionTwo.votes.length} active={userAnswer === \"optionOne\"} />\n              <VoteDetails text={question.optionTwo.text} votes={question.optionTwo.votes.length} totalVotes={question.optionOne.votes.length + question.optionTwo.votes.length} active={userAnswer === \"optionTwo\"} />\n            </Box>\n          </CardContent>}\n        </Collapse>\n        {!userAnswer && <CardActions>\n          <Button fullWidth variant=\"outlined\" value=\"optionOne\" sx={{ height: \"5rem\" }} onClick={handleAnswer}>{question.optionOne.text}</Button>\n          <Button fullWidth variant=\"outlined\" value=\"optionTwo\" sx={{ height: \"5rem\" }} onClick={handleAnswer}>{question.optionTwo.text}</Button>\n        </CardActions>}\n      </Card>\n    </Link >\n  );\n}\n\nconst VoteDetails: React.FC<{ text: string, votes: number, totalVotes: number, active?: boolean }> = ({ text, votes, totalVotes, active }) => {\n  return (\n    <Button fullWidth variant=\"outlined\" value=\"optionOne\" sx={{ p: 3, m: 1, alignItems: \"flex-start\", cursor: \"auto\" }} startIcon={active && <Icon sx={{ fontSize: \"2rem !important\"}}>task_alt</Icon>}>\n      <Box display=\"flex\" flexDirection=\"column\" flex={1} alignItems=\"center\">\n        <Typography>{text}</Typography>\n        <Box sx={{ position: 'relative', display: 'inline-flex', margin: 2 }}>\n          <CircularProgress variant=\"determinate\" value={votes / totalVotes * 100} />\n          <Box\n            sx={{\n              top: 0,\n              left: 0,\n              bottom: 0,\n              right: 0,\n              position: 'absolute',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\n              {`${Math.round(votes / totalVotes * 100)}%`}\n            </Typography>\n          </Box>\n        </Box>\n        <Typography>{votes} out of {totalVotes} votes</Typography>\n      </Box>\n\n    </Button>\n\n  );\n}\n\nexport default Question;\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../store';\nimport Question from './Question';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\n\nfunction Dashboard() {\n  const questionIds = useSelector((state: RootState) => Object.keys(state.questions)\n    .sort((a, b) => state.questions[b].timestamp - state.questions[a].timestamp))\n\n  const authedUser = useSelector((state: RootState) => state.app.authedUser)\n  const users = useSelector((state: RootState) => state.users)\n\n  let unansweredIds = questionIds;\n  let answeredIds: string[] = [];\n\n  if (authedUser) {\n    answeredIds = Object.keys(users[authedUser.username].answers);\n    unansweredIds = unansweredIds.filter(id => !answeredIds.includes(id))\n  }\n\n  const [value, setValue] = useState(authedUser && questionIds.length > 0 ? '2' : '1');\n\n  useEffect(() => {\n    authedUser && questionIds.length > 0 ? setValue('2') : setValue('1');\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [authedUser])\n\n  return (\n    <TabContext value={value}>\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <TabList centered onChange={(event, newValue) => { setValue(newValue); }}>\n          <Tab label=\"All Questions\" value=\"1\" />\n          {authedUser && questionIds.length > 0 && <Tab label=\"Unanswered Questions\" value=\"2\" />}\n          {authedUser && questionIds.length > 0 && <Tab label=\"Answered Questions\" value=\"3\" />}\n        </TabList>\n      </Box>\n      <TabPanel value=\"1\" sx={{ p: 0 }}>\n        {questionIds.map(id => <Question key={id} id={id} />)}\n        {questionIds.length === 0 && <Typography component=\"h3\" align=\"center\" sx={{ p: 3 }}>There's NO Questions Yet!</Typography>}\n      </TabPanel>\n      {authedUser && questionIds.length > 0 && <TabPanel value=\"2\" sx={{ p: 0 }}>\n        {unansweredIds.map(id => <Question key={id} id={id} />)}\n        {unansweredIds.length === 0 && <Typography component=\"h3\" align=\"center\" sx={{ p: 3 }}>You Answered All Questions!</Typography>}\n      </TabPanel>}\n      {authedUser && questionIds.length > 0 && <TabPanel value=\"3\" sx={{ p: 0 }}>\n        {answeredIds.map(id => <Question key={id} id={id} />)}\n        {answeredIds.length === 0 && <Typography component=\"h3\" align=\"center\" sx={{ p: 3 }}>NO Answers?!</Typography>}\n      </TabPanel>}\n    </TabContext>\n  );\n}\n\nexport default Dashboard;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { actions } from '../slices';\nimport { AppDispatch, RootState } from '../store';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\n\nfunction Leaderboard() {\n  const authedUser = useSelector((state: RootState) => state.app.authedUser)\n  const users = useSelector((state: RootState) => state.users)\n  const dispatch = useDispatch<AppDispatch>();\n\n  useEffect(() => {\n    if (!authedUser) {\n      dispatch(actions.app.announce(\"Please login to view leaderboard!\"));\n    }\n  }, [authedUser, dispatch])\n\n  if (!authedUser) {\n    return <Redirect to=\"/login\" />\n  }\n\n  const sorted = Object.keys(users)\n    .sort((a, b) => (users[b].questions.length + Object.keys(users[b].answers).length) -\n      (users[a].questions.length + Object.keys(users[a].answers).length));\n\n  return <>\n    {sorted.map(id =>\n      <Card key={users[id].id} variant=\"outlined\" sx={{ display: 'flex', m: 2, height: 128 }}>\n        <CardMedia\n          component=\"img\"\n          sx={{ width: 128 }}\n          image={users[id].avatarURL}\n          alt={`Avatar of ${users[id].name}`}\n        />\n        <Box sx={{ display: 'flex', flexDirection: 'column', flexGrow: 1 }}>\n          <CardContent sx={{ flex: '1 0 auto', p: \"1rem !important\" }}>\n            <Typography component=\"div\" variant=\"subtitle2\" sx={{ pb: 1 }}>{users[id].name}</Typography>\n            <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\n              Asked: {users[id].questions.length}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\n              Answered: {Object.keys(users[id].answers).length}\n            </Typography>\n          </CardContent>\n        </Box>\n        <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" sx={{ p: 2, m: 2, borderRadius: 3, backgroundColor: 'ButtonFace' }}>\n          <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\n            Score:\n          </Typography>\n          <Typography variant=\"h4\" color=\"text.primary\" component=\"h3\">\n            {users[id].questions.length + Object.keys(users[id].answers).length}\n          </Typography>\n        </Box>\n      </Card>\n    )}\n  </>\n}\n\nexport default Leaderboard;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { clearAuthedUser } from '../services';\nimport { actions } from '../slices';\nimport { AppDispatch, RootState } from '../store';\nimport Toolbar from '@mui/material/Toolbar';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport Icon from '@mui/material/Icon';\n\n\nconst Navbar: React.FC = () => {\n  const authedUser = useSelector((state: RootState) => state.app.authedUser)\n  const dispatch = useDispatch<AppDispatch>();\n\n  const logout = () => {\n    clearAuthedUser();\n    dispatch(actions.app.setAuthedUser(null))\n    dispatch(actions.app.announce('Logged out!'))\n  }\n\n  const location = useLocation();\n\n  return (\n    <React.Fragment>\n      <Toolbar sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Typography\n          component={NavLink}\n          to=\"/\"\n          variant=\"h5\"\n          color=\"inherit\"\n          noWrap\n          sx={{ flex: 1 }}\n        >\n          Would You Rather\n        </Typography>\n        {authedUser ? <>\n          <Typography\n            component=\"span\"\n            variant=\"subtitle2\"\n            color=\"inherit\"\n            noWrap\n            sx={{ px: 1 }}\n          >\n            Welcome, {authedUser.name}\n          </Typography>\n          <Button onClick={logout}>Logout</Button>\n        </> :\n          <Button component={NavLink} to=\"/login\" variant=\"outlined\" size=\"small\">\n            Login\n          </Button>}\n\n      </Toolbar>\n      <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0, zIndex: 3 }} elevation={3}>\n        <BottomNavigation\n          showLabels\n          value={location.pathname}\n        >\n          <BottomNavigationAction value=\"/\" component={NavLink} to=\"/\" label=\"Home\" icon={<Icon>dashboard</Icon>} />\n          <BottomNavigationAction value=\"/add\" component={NavLink} to=\"/add\" label=\"Add\" icon={<Icon>add</Icon>} />\n          <BottomNavigationAction value=\"/leaderboard\" component={NavLink} to=\"/leaderboard\" label=\"Leaderboard\" icon={<Icon>leaderboard</Icon>} />\n        </BottomNavigation>\n      </Paper>\n    </React.Fragment>\n  )\n}\n\nexport default Navbar;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { actions } from '../slices';\nimport { AppDispatch, RootState } from '../store';\nimport Avatar from '@mui/material/Avatar';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Icon from '@mui/material/Icon';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\nconst NewQuestion: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const authedUser = useSelector((state: RootState) => state.app.authedUser)\n  const history = useHistory()\n\n  const [newQuestion, setNewQuestion] = useState({\n    optionOne: '',\n    optionTwo: '',\n  })\n\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setNewQuestion({ ...newQuestion, [name]: value })\n  }\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    await dispatch(actions.questions.addQuestionAsync(newQuestion))\n    setNewQuestion({\n      optionOne: '',\n      optionTwo: '',\n    })\n    history.push('/')\n  }\n\n  useEffect(() => {\n    if (!authedUser) {\n      dispatch(actions.app.announce(\"Please login to add questions!\"));\n    }\n  }, [authedUser, dispatch])\n\n  if (!authedUser) {\n    return <Redirect to=\"/login\" />\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n    <Box\n      sx={{\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n        <Icon>alt_route</Icon>\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Would You Rather\n      </Typography>\n      <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n        <TextField\n          size=\"small\"\n          margin=\"dense\"\n          required\n          fullWidth\n          id=\"optionOne\"\n          label=\"First Option\"\n          name=\"optionOne\"\n          autoComplete=\"optionOne\"\n          autoFocus\n          onChange={handleInput}\n        />\n        <TextField\n          size=\"small\"\n          margin=\"dense\"\n          required\n          fullWidth\n          name=\"optionTwo\"\n          label=\"Second Option\"\n          id=\"optionTwo\"\n          autoComplete=\"optionTwo\"\n          onChange={handleInput}\n        />\n        <Button\n          type=\"submit\"\n          disabled={newQuestion.optionOne === '' || newQuestion.optionTwo === ''}\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Submit\n        </Button>\n      </Box>\n    </Box>\n  </Container>\n  )\n}\n\nexport default NewQuestion;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { actions } from '../slices';\nimport { RootState } from '../store';\nimport Snackbar from '@mui/material/Snackbar';\n\nfunction Announcer() {\n  const announcement = useSelector((state: RootState) => state.app.announcement);\n  const dispatch = useDispatch()\n\n  const handleClose = () => dispatch(actions.app.clearAnnouncement());\n\n  return <Snackbar\n    open={announcement !== null}\n    autoHideDuration={3000}\n    onClose={handleClose}\n    message={announcement}\n  />\n}\n\nexport default Announcer;\n","export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","import React from \"react\";\nimport logo from \"../logo.svg\";\n\nconst Splash: React.FC = () => {\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"2rem\" }}>\n      <img src={logo} width={256} alt=\"Resource Not Found\" />\n      <h3>Would You Rather</h3>\n    </div>\n  );\n}\n\nexport default Splash","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingBar from 'react-redux-loading-bar';\nimport { actions } from '../slices';\nimport { AppDispatch, RootState } from '../store';\nimport RegisterForm from './RegisterForm';\nimport LoginForm from './LoginForm';\nimport Dashboard from './Dashboard';\nimport Question from './Question';\nimport Leaderboard from './Leaderboard';\nimport Navbar from './Navbar';\nimport NewQuestion from './NewQuestion';\nimport Announcer from './Announcer';\nimport NotFound from './NotFound';\nimport Box from '@mui/system/Box';\nimport Splash from './Splash';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const loading = useSelector((state: RootState) => state.app.loading)\n\n  useEffect(() => {\n    dispatch(actions.app.loadAsync())\n  }, [dispatch])\n\n  return (\n    <Router>\n      <LoadingBar />\n      <Announcer />\n      <Navbar />\n      {loading ? <Splash /> :\n        <Box sx={{ pb: 7 }}>\n          <Switch>\n            <Route path='/' exact component={Dashboard} />\n            <Route path='/register' component={RegisterForm} />\n            <Route path='/login' component={LoginForm} />\n            <Route path='/questions/:id' component={Question} />\n            <Route path='/add' component={NewQuestion} />\n            <Route path='/leaderboard' component={Leaderboard} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </Box>\n      }\n    </Router>\n  );\n}\n\nexport default App;","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport reducers from './slices';\n\nexport const store = configureStore({\n  reducer: reducers\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}